(import [lisp-tools [*]]
        [svg [*]]
        [numpy [array around]]
        [operator [add]])

;;
;; Test lisp-tools
;;

(defn test-last []
  (assert (= (last [1 2 3]) 3)))

(defn test-butlast []
  (assert (= (butlast [1 2 3]) [1 2])))

(defn test-zipmap []
  (assert (= (zipmap ["a" "b"] [1 2] )
             {"a" 1 "b" 2})))

(defn test-partition []
  (assert (= (partition 3 2 [1 2 3 4 5])
             [[1 2 3] [3 4 5]])))

(defn test-reductions []
  (assert (= (reductions add [1 2 3])
             [1 3 6]))
  (assert (= (reductions add [(array [2 3]) (array [3 4])] (array [1 1]))
             [array([1, 1]), array([3, 4]), array([ 6, 8])]))
  (assert (= (reductions add (array [[2 3] [3 4]]) (array [1 1]))
             [array([1, 1]), array([3, 4]), array([ 6, 8])]))
  (assert (= (reductions add (array [[1 1] [2 3] [3 4]]) )
             [array([1, 1]), array([3, 4]), array([ 6, 8])]))
  (assert (= (reductions (fn [x y] (map add x y)) [[1 1] [2 3] [3 4]])
             [[1 1] [3 4] [6 8]])))


;;
;; Test svgcfrec2
;;

(defn test-list-add []
  (assert (= (list-add [1 2] [3 4]) [4 6])))

(defn test-elevate-bezier []
  (assert (.all (= (elevate-bezier (array [[1 2] [2 3] [3 4]]))
                   (elevate-bezier [[1 2] [2 3] [3 4]]))))
  (assert (.all (= (around (elevate-bezier [[1 2] [2 3] [3 4]]) 2)
                   [[1. 2.] [1.67  2.67] [2.33 3.33] [3. 4.]]))))

(defn test-lines2beziers []
  (assert (= (lines2beziers [[[  7.1387396   1.0595   ]
                              [  7.1387396   4.4387   ]]
                             [[  7.1387396   4.4387   ]
                              [ 14.2774792   5.4982   ]]])
             [[[  7.1387396    1.0595    ]
               [  7.1387396    2.1859    ]
               [  7.1387396    3.3123    ]
               [  7.1387396    4.4387    ]]
              [[  7.1387396    4.4387    ]
               [  9.51831947   4.79186667]
               [ 11.89789933   5.14503333]
               [ 14.2774792    5.4982    ]]]))            )

(defn test-add-first-ctrl-pts []
  True)

(defn test-path2matrix []
  (setv str "m 0.16338942,11.341288 c 0.33619,-0.8761 0.83433,-2.6761001 1.10697998,-4.0000001 0.27266,-1.3239 0.72931,-3.5321 1.01479,-4.9071 0.76004,-3.6607 2.48095,-3.05079996 2.48095,0.8792 l 0,3.3792 7.1387396,1.0595 c 11.00777,1.6338 11.36723,3.4916001 0.55164,2.8510001 -7.0567496,-0.4179 -8.9185296,-0.2379 -9.3569896,0.9047 -0.30105,0.7845 -1.22237,1.4264 -2.04737,1.4264 -0.96136998,0 -1.28050998,-0.572 -0.88873998,-1.5929 z")
  (assert (= (first (list (path2matrix str)))
             (array [[[  0.16338942  11.341288  ]
                      [  0.49957942  10.465188  ]
                      [  0.99771942   8.6651879 ]
                      [  1.2703694    7.3412879 ]]
                     [[  1.2703694    7.3412879 ]
                      [  1.5430294    6.0173879 ]
                      [  1.9996794    3.8091879 ]
                      [  2.2851594    2.4341879 ]]
                     [[  2.2851594    2.4341879 ]
                      [  3.0451994   -1.2265121 ]
                      [  4.7661094   -0.61661206]
                      [  4.7661094    3.3133879 ]]
                     [[  4.7661094    3.3133879 ]
                      [  4.7661094    4.4397879 ]
                      [  4.7661094    5.5661879 ]
                      [  4.7661094    6.6925879 ]]
                     [[  4.7661094    6.6925879 ]
                      [  7.14568927   7.04575457]
                      [  9.52526913   7.39892123]
                      [ 11.904849     7.7520879 ]]
                     [[ 11.904849     7.7520879 ]
                      [ 22.912619     9.3858879 ]
                      [ 23.272079    11.243688  ]
                      [ 12.456489    10.603088  ]]
                     [[ 12.456489    10.603088  ]
                      [  5.3997394   10.185188  ]
                      [  3.5379594   10.365188  ]
                      [  3.0994994   11.507788  ]]
                     [[  3.0994994   11.507788  ]
                      [  2.7984494   12.292288  ]
                      [  1.8771294   12.934188  ]
                      [  1.0521294   12.934188  ]]
                     [[  1.0521294   12.934188  ]
                      [  0.09075942  12.934188  ]
                      [ -0.22838058  12.362188  ]
                      [  0.16338942  11.341288  ]]]))

          )
  )

(defn test-matrix2path []
  (assert (= (matrix2path (array [[[  0.16338942  11.341288  ]
                                   [  0.49957942  10.465188  ]
                                   [  0.99771942   8.6651879 ]
                                   [  1.2703694    7.3412879 ]]
                                  [[  1.2703694    7.3412879 ]
                                   [  1.5430294    6.0173879 ]
                                   [  1.9996794    3.8091879 ]
                                   [  2.2851594    2.4341879 ]]
                                  [[  2.2851594    2.4341879 ]
                                   [  3.0451994   -1.2265121 ]
                                   [  4.7661094   -0.61661206]
                                   [  4.7661094    3.3133879 ]]
                                  [[  4.7661094    3.3133879 ]
                                   [  4.7661094    4.4397879 ]
                                   [  4.7661094    5.5661879 ]
                                   [  4.7661094    6.6925879 ]]
                                  [[  4.7661094    6.6925879 ]
                                   [  7.14568927   7.04575457]
                                   [  9.52526913   7.39892123]
                                   [ 11.904849     7.7520879 ]]
                                  [[ 11.904849     7.7520879 ]
                                   [ 22.912619     9.3858879 ]
                                   [ 23.272079    11.243688  ]
                                   [ 12.456489    10.603088  ]]
                                  [[ 12.456489    10.603088  ]
                                   [  5.3997394   10.185188  ]
                                   [  3.5379594   10.365188  ]
                                   [  3.0994994   11.507788  ]]
                                  [[  3.0994994   11.507788  ]
                                   [  2.7984494   12.292288  ]
                                   [  1.8771294   12.934188  ]
                                   [  1.0521294   12.934188  ]]
                                  [[  1.0521294   12.934188  ]
                                   [  0.09075942  12.934188  ]
                                   [ -0.22838058  12.362188  ]
                                   [  0.16338942  11.341288  ]]]))
           " M0.163,11.341 C0.5,10.465 0.998,8.665 1.27,7.341 C1.543,6.017 2.0,3.809 2.285,2.434 C3.045,-1.227 4.766,-0.617 4.766,3.313 C4.766,4.44 4.766,5.566 4.766,6.693 C7.146,7.046 9.525,7.399 11.905,7.752 C22.913,9.386 23.272,11.244 12.456,10.603 C5.4,10.185 3.538,10.365 3.099,11.508 C2.798,12.292 1.877,12.934 1.052,12.934 C0.091,12.934 -0.228,12.362 0.163,11.341"
)))


;;
;; Test all
;;

(defn test []
  (test-last)
  (test-zipmap)
  (test-partition)
  (test-reductions)
  (test-elevate-bezier)
  (test-path2matrix))

(test)
